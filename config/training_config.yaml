training:
  model_params:
    # Model type. Options are: 'mccd', 'graph', 'poly, 'param', 'poly_physical'."
    model_name: poly

    #Num of wavelength bins to reconstruct polychromatic objects.
    n_bins_lda: 8 

    #Downsampling rate to match the oversampled model to the specified telescope's sampling.
    output_Q: 3
  
    #Oversampling rate used for the OPD/WFE PSF model.
    oversampling_rate: 3 
  
    #Dimension of the pixel PSF postage stamp
    output_dim: 32
      
    #Dimension of the OPD/Wavefront space."
    pupil_diameter: 256

    #Boolean to define if we use sample weights based on the noise standard deviation estimation
    use_sample_weights: True 

    #Interpolation type for the physical poly model. Options are: 'none', 'all', 'top_K', 'independent_Zk'."
    interpolation_type: None

    # Intepolation points per bin
    interp_pts_per_bin: 0

    # Extrapolate
    extrapolate: True
    
    # SED interpolate kind
    sed_interp_kind: linear

    # Standard deviation of the multiplicative SED Gaussian noise.
    sed_sigma: 0

    #Limits of the PSF field coordinates for the x axis.
    x_lims: [0.0, 1.0e+3]
    
    #Limits of the PSF field coordinates for the y axis.
    y_lims: [0.0, 1.0e+3]
    
    # Hyperparameters for Parametric model 
    param_hparams:
      # Parameter for the l2 loss function for the Optical path differences (OPD)/WFE
      l2_param: 0.
    
      #Zernike polynomial modes to use on the parametric part.
      n_zernikes: 15
    
      #Max polynomial degree of the parametric part.  chg to max_deg_param
      d_max: 2  

      #Flag to save optimisation history for parametric model
      save_optim_history_param: true

 
    # Hyperparameters for non-parametric model
    nonparam_hparams:
      #Max polynomial degree of the non-parametric part. chg to max_deg_nonparam
      d_max_nonparam: 5 

      # Number of graph features
      num_graph_features: 10
      
      #L1 regularisation parameter for the non-parametric part."
      l1_rate: 1.0e-8

      #Flag to enable Projected learning for DD_features to be used with `poly` or `semiparametric` model.
      project_dd_features: False

      #Flag to reset DD_features to be used with `poly` or `semiparametric` model
      reset_dd_features: False

      #Flag to save optimisation history for non-parametric model
      save_optim_history_nonparam: true 

  # Training hyperparameters
  training_hparams:
    n_epochs_params: [2, 2, 2]
   
    n_epochs_non_params: [2, 2, 2] 
  
    batch_size: 32
         
    multi_cycle_params:
      
      #"Saved cycle to use for the evaluation. Can be 'cycle1' or 'cycle2'."
      saved_cycle: cycle3
   
      # Learning rates for the parametric parts. It should be a str where numeric values are separated by spaces.
      learning_rate_params: [1.0e-2, 1.0e-2, 1.0e-2]
 
      # Learning rates for the non-parametric parts. It should be a str where numeric values are separated by spaces." 
      learning_rate_non_params: [1.0e-1, 1.0e-1, 1.0e-1]
 
      # Number of training epochs of the parametric parts. It should be a strign where numeric values are separated by spaces."
      n_epochs_params: [20, 20, 20] 
  
      # Number of training epochs of the non-parametric parts. It should be a str where numeric values are separated by spaces."
      n_epochs_non_params: [100, 120, 120]
 
      # Make checkpoint at every cycle or just save the checkpoint at the end of the training."
      save_all_cycles: False
 
      # Total amount of cycles to perform. For the moment the only available options are '1' or '2'."   
      total_cycles: 3       
 
       # Train cycle definition. It can be: 'parametric', 'non-parametric', 'complete', 'only-non-parametric' and 'only-parametric'."
      cycle_def: complete


  data:
    training:
      file: data/coherent_euclid_dataset/train_Euclid_res_200_TrainStars_id_001.npy
     # if training dataset file does not exist, generate a new one 
      stars: null
      positions: null
      SEDS: null
      zernike_coef: null
      C_poly: null
      params: # 
        d_max: 2
        max_order: 45
        x_lims: [0, 1000.0]
        y_lims: [0, 1000.0]
        grid_points: [4, 4]
        n_bins: 20
        max_wfe_rms: 0.1
        oversampling_rate: 3.0
        output_Q: 3.0
        output_dim: 32
        LP_filter_length: 2
        pupil_diameter: 256
        euclid_obsc: true
        n_stars: 200
    test:
      file: data/coherent_euclid_dataset/test_Euclid_res_id_001.npy
      # If test dataset file not provided produce a new one
      stars: null
      noisy_stars: null
      positions: null
      SEDS: null
      zernike_coef: null
      C_poly: null
      parameters:
        d_max: 2
        max_order: 45
        x_lims: [0, 1000.0]
        y_lims: [0, 1000.0]
        grid_points: [4,4]
        max_wfe_rms: 0.1


